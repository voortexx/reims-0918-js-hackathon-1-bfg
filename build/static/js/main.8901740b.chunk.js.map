{"version":3,"sources":["img/witch.gif","HomeButtons.js","Header.js","Footer.js","getRandomNumber.js","OneCandy.js","FullInventory.js","Adresses.js","CandiesList.js","AdressesListing.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","HomeButtons","props","react_default","a","createElement","reactstrap_es","className","web","from","opacity","transform","to","styles","style","onClick","tabsOpeningFunction","color","height","fontSize","id","delay","Header","in","result","stdDeviation","mode","values","in2","x1","y1","x2","y2","spreadMethod","offset","stopColor","stopOpacity","dur","attributeName","repeatCount","Footer","fluid","href","getRandomNumber","length","Math","floor","random","OneCandy","oneCandy","image_url","overflow","maxHeight","top","src","alt","product_name","CandiesList","_ref","fullBag","backButton","map","oneBag","index","key","borderBottom","paddingBottom","marginTop","item","xs","src_OneCandy","Adresses","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","modal","visited","toggle","bind","assertThisInitialized","setState","witchCall","_this2","adresseInfos","houseNumber","properties","name","postcode","city","width","isOpen","label","candiesHouse","selectCandy","React","Component","myCandies","keepMyBag","Fragment","AdressesListing","playerName","adressesList","oneAdress","src_Adresses","src_CandiesList","App","adresses","candiesList","adressesAndCandies","huntingOpen","adresseOpen","myCandiesOpen","witchPower","tabsOpeningSystem","onPressEnterNicknameChecked","callApiAdresses","callApiCandies","i","fetch","then","results","json","data","features","singleData","_this3","_this4","listAdresses","listNumberRandom","j","randomN","includes","push","products","objectSpread","tabName","newCandy","filter","product","toConsumableArray","concat","newBag","e","target","value","event","charCode","candiesAttribution","_this5","src_Header_0","react","witch","src_HomeButtons","type","onChange","handleChangePlayerName","onKeyPress","placeholder","src_AdressesListing","FullInventory","src_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8901740b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/witch.e51ecc3c.gif\";","import React from \"react\";\nimport { Button, Row } from \"reactstrap\";\nimport { Spring } from \"react-spring\";\n\nconst HomeButtons = props => {\n  return (\n    <Row className=\"homenav justify-content-center\">\n      <Spring\n        from={{ opacity: 0, transform: \"translate3d(-150px,0,0)\" }}\n        to={{ opacity: 1, transform: \"translate3d(0,0,0)\" }}\n      >\n        {styles => (\n          <Button\n            style={styles}\n            className=\"mt-2\"\n            onClick={() => props.tabsOpeningFunction(\"adresse\")}\n            color=\"primary\"\n          >\n            <i\n              style={{ height: \"150px\", fontSize: \"150px\" }}\n              className=\"d-block fas fa-map-marker-alt mb-3\"\n            />\n            <div id=\"word\">\n              <div id=\"glitches\">\n                <span id=\"main\">Adresses</span>\n                <div id=\"letters\">\n                  <span className=\"letter\">A</span>\n                  <span className=\"letter\">d</span>\n                  <span className=\"letter\">r</span>\n                  <span className=\"letter\">e</span>\n                  <span className=\"letter\">s</span>\n                  <span className=\"letter\">s</span>\n                  <span className=\"letter\">e</span>\n                  <span className=\"letter\">s</span>\n                </div>\n              </div>\n            </div>\n          </Button>\n        )}\n      </Spring>\n      <Spring\n        from={{ opacity: 0, transform: \"translate3d(-150px,0,0)\" }}\n        to={{ opacity: 1, transform: \"translate3d(0,0,0)\" }}\n        delay={200}\n      >\n        {styles => (\n          <Button\n            style={styles}\n            className=\"m-2\"\n            onClick={() => props.tabsOpeningFunction(\"inventaire\")}\n            color=\"primary\"\n          >\n            <i\n              style={{ height: \"150px\", fontSize: \"150px\" }}\n              className=\"d-block fas fa-shopping-bag mb-3\"\n            />\n            <div id=\"word\">\n              <div id=\"glitches\">\n                <span id=\"main2\">Inventory</span>\n                <div id=\"letters\">\n                  <span className=\"letter\">I</span>\n                  <span className=\"letter\">n</span>\n                  <span className=\"letter\">v</span>\n                  <span className=\"letter\">e</span>\n                  <span className=\"letter\">n</span>\n                  <span className=\"letter\">t</span>\n                  <span className=\"letter\">o</span>\n                  <span className=\"letter\">r</span>\n                  <span className=\"letter\">y</span>\n                </div>\n              </div>\n            </div>\n          </Button>\n        )}\n      </Spring>\n    </Row>\n  );\n};\n\nexport default HomeButtons;\n","import React from \"react\";\nimport \"./Header.css\";\nimport { Spring } from \"react-spring\";\n\nconst Header = () => (\n  <div>\n    <header className=\"hero\">\n      <div className=\"hero_bg\" />\n      <div className=\"hero_fg\" />\n      <Spring\n        from={{ opacity: 0, transform: \"translate3d(0,-40px,0)\" }}\n        to={{ opacity: 1, transform: \"translate3d(0,0,0)\" }}\n      >\n        {props => (\n          <h1 style={props} className=\"title text-center\">\n            Treat <span>or</span> Coding!\n            <span className=\"drop\" />\n            <span className=\"drop\" />\n            <span className=\"drop\" />\n            <span className=\"drop\" />\n            <span className=\"drop\" />\n          </h1>\n        )}\n      </Spring>\n    </header>\n    <svg className=\"visually-hidden\">\n      <defs>\n        <filter id=\"goo\">\n          <feGaussianBlur in=\"SourceGraphic\" result=\"blur\" stdDeviation=\"2\" />\n          <feColorMatrix\n            in=\"blur\"\n            mode=\"matrix\"\n            values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -7\"\n            result=\"goo\"\n          />\n          <feComposite in2=\"goo\" in=\"SourceGraphic\" result=\"mix\" />\n        </filter>\n\n        <linearGradient\n          id=\"myLinearGradient1\"\n          x1=\"0%\"\n          y1=\"0%\"\n          x2=\"0%\"\n          y2=\"100%\"\n          spreadMethod=\"pad\"\n        >\n          <stop offset=\"0%\" stopColor=\"#00cc00\" stopOpacity=\"1\" />\n          <stop offset=\"100%\" stopColor=\"#006600\" stopOpacity=\"1\" />\n          <animate\n            values=\"0% 25% 0%;\"\n            dur=\"2s\"\n            attributeName=\"y1\"\n            repeatCount=\"indefinite\"\n          />\n          <animate\n            values=\"100%; 50%; 100%\"\n            dur=\"4s\"\n            attributeName=\"y2\"\n            repeatCount=\"indefinite\"\n          />\n        </linearGradient>\n      </defs>\n    </svg>\n  </div>\n);\n\nexport default Header;\n","import React from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\n\nconst Footer = () => (\n  <Container fluid>\n    <Row>\n      <Col>\n        Made with <span className=\"pumpkin\">🎃</span> by{\" \"}\n        <a\n          className=\"link\"\n          href=\"https://www.linkedin.com/in/fabien-raymond-41227114b/\"\n        >\n          Fabien\n        </a>{\" \"}\n        -{\" \"}\n        <a\n          className=\"link\"\n          href=\"https://www.linkedin.com/in/benoît-niveau-a34ba9133/\"\n        >\n          Benoît\n        </a>{\" \"}\n        -{\" \"}\n        <a\n          className=\"link\"\n          href=\"https://www.linkedin.com/in/gautier-simonin-63a191170/\"\n        >\n          Gautier\n        </a>\n      </Col>\n    </Row>\n  </Container>\n);\n\nexport default Footer;\n","const getRandomNumber = length =>\n  Math.floor(Math.random() * Math.floor(length));\nexport default getRandomNumber;\n","import React from \"react\";\nimport { Card, CardImg, CardBody, CardTitle } from \"reactstrap\";\n\nconst OneCandy = props => {\n  return (\n    <div>\n      <Card>\n        {props.oneCandy[0].image_url ? (\n          <div style={{ overflow: \"hidden\", maxHeight: \"200px\" }}>\n            <CardImg\n              className=\"img-fluid\"\n              height=\"150px\"\n              top\n              src={props.oneCandy[0].image_url}\n              alt=\"Card image cap\"\n            />\n          </div>\n        ) : (\n          <i className=\"fas fa-ghost fa-3x pt-4\" />\n        )}\n        <CardBody>\n          <CardTitle>{props.oneCandy[0].product_name}</CardTitle>\n        </CardBody>\n      </Card>\n    </div>\n  );\n};\n\nexport default OneCandy;\n","import React from \"react\";\nimport { CardDeck, Button, Col } from \"reactstrap\";\nimport OneCandy from \"./OneCandy\";\nimport { Spring } from \"react-spring\";\nconst CandiesList = ({ fullBag, backButton }) => {\n  return (\n    <Spring\n      from={{ opacity: 0, transform: \"translate3d(-40px,0,0)\" }}\n      to={{ opacity: 1, transform: \"translate3d(0,0,0)\" }}\n    >\n      {props => (\n        <div style={props}>\n          <Button className=\"chasseinit\" onClick={() => backButton()}>\n            Back\n          </Button>\n          {fullBag.length > 0 ? (\n            fullBag.map((oneBag, index) => (\n              <div key={index}>\n                {\" \"}\n                <h2>{index + 1}</h2>\n                <h3 style={{ color: \"#fff\" }}>Items Session</h3>\n                <CardDeck\n                  style={{\n                    borderBottom: \"1px solid #a2ff21\",\n                    paddingBottom: \"25px\",\n                    marginTop: \"25px\"\n                  }}\n                >\n                  {oneBag.map((item, index) => (\n                    <Col xs=\"3\">\n                      <OneCandy key={index} oneCandy={item} />\n                    </Col>\n                  ))}\n                </CardDeck>\n              </div>\n            ))\n          ) : (\n            <h2 className=\"mt-3\" style={{ color: \"#fff\" }}>\n              Your Inventory is Empty\n            </h2>\n          )}\n        </div>\n      )}\n    </Spring>\n  );\n};\n\nexport default CandiesList;\n","import React from \"react\";\nimport {\n  Card,\n  CardDeck,\n  CardBody,\n  CardTitle,\n  Col,\n  Row,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  CardImg\n} from \"reactstrap\";\n\nclass Adresses extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n      visited: false\n    };\n\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState({\n      modal: !this.state.modal,\n      visited: true\n    });\n    this.props.witchCall();\n  }\n  render() {\n    return (\n      <Col xs=\"4\" className=\"mb-3\">\n        <Card className=\"oneAdress\">\n          <CardBody>\n            <Row>\n              <Col xs=\"12\" className=\"justify-content-center\">\n                <CardTitle>\n                  {this.props.adresseInfos.houseNumber}\n                  {\"  \"}\n                  {this.props.adresseInfos.properties.name}\n                  {\"  \"}\n                  {this.props.adresseInfos.properties.postcode}\n                  {\"  \"}\n                  {this.props.adresseInfos.properties.city}\n                </CardTitle>\n              </Col>\n              <Col xs=\"12\" className=\"justify-content-center\">\n                {!this.state.visited ? (\n                  <Button onClick={this.toggle} style={{ width: \"100px\" }}>\n                    Visit It !\n                  </Button>\n                ) : (\n                  <h5 className=\"already\">Already Visit</h5>\n                )}\n              </Col>\n            </Row>\n          </CardBody>\n          <Modal\n            isOpen={this.state.modal}\n            toggle={this.toggle}\n            className={this.props.className}\n          >\n            <ModalHeader toggle={this.toggle} className=\"font\">\n              {this.props.adresseInfos.houseNumber}{\" \"}\n              {this.props.adresseInfos.properties.label}\n            </ModalHeader>\n            <ModalBody className=\"font\">\n              <CardDeck>\n                {this.props.adresseInfos.candiesHouse.map((oneCandy, id) => (\n                  <Col xs=\"6\" key={id}>\n                    <Card>\n                      {oneCandy.image_url ? (\n                        <CardImg\n                          top\n                          width=\"30%\"\n                          src={oneCandy.image_url}\n                          alt=\"Card image cap\"\n                        />\n                      ) : (\n                        <i className=\"text-center fas fa-ghost fa-5x p-5\" />\n                      )}\n                      <CardBody>\n                        <CardTitle className=\"text-truncate\">\n                          {oneCandy.product_name}\n                        </CardTitle>\n                        <Button\n                          onClick={() => {\n                            this.props.selectCandy(oneCandy.id);\n\n                            this.toggle();\n                          }}\n                        >\n                          Choose this Candy\n                        </Button>\n                      </CardBody>\n                    </Card>\n                  </Col>\n                ))}\n              </CardDeck>\n            </ModalBody>\n            <ModalFooter>\n              <Button className=\"font\" color=\"secondary\" onClick={this.toggle}>\n                Fermer\n              </Button>\n            </ModalFooter>\n          </Modal>\n        </Card>\n      </Col>\n    );\n  }\n}\n\nexport default Adresses;\n","import React from \"react\";\nimport { CardDeck, Button } from \"reactstrap\";\nimport OneCandy from \"./OneCandy\";\n\nconst CandiesList = ({ myCandies, keepMyBag }) => {\n  return (\n    <React.Fragment>\n      {myCandies.length > 0 && (\n        <React.Fragment>\n          <h2>Bag Items: {myCandies.length}</h2>\n          <Button className=\"chasseinit bag\" onClick={() => keepMyBag()}>\n            Keep my Bag\n          </Button>\n        </React.Fragment>\n      )}\n      <CardDeck className=\"justify-content-center\">\n        {myCandies.map((oneCandy, index) => (\n          <OneCandy key={index} oneCandy={oneCandy} />\n        ))}\n      </CardDeck>\n    </React.Fragment>\n  );\n};\n\nexport default CandiesList;\n","import React from \"react\";\nimport Adresses from \"./Adresses\";\nimport CandiesList from \"./CandiesList\";\nimport { CardDeck, Button, Col, Row } from \"reactstrap\";\nimport { Spring } from \"react-spring\";\n\nconst AdressesListing = props => (\n  <div>\n    <Button className=\"chasseinit\" onClick={() => props.backButton()}>\n      Back\n    </Button>\n    <h3 className=\"playerName\">{props.playerName}, be aware of the witch!</h3>\n    <Row>\n      <Spring\n        from={{ opacity: 0, transform: \"translate3d(0,-40px,0)\" }}\n        to={{ opacity: 1, transform: \"translate3d(0,0,0)\" }}\n      >\n        {styles => (\n          <Col style={styles} xs=\"10\">\n            <CardDeck>\n              {props.adressesList.map(oneAdress => (\n                <Adresses\n                  key={oneAdress.properties.id}\n                  selectCandy={props.selectCandy}\n                  adresseInfos={oneAdress}\n                  witchCall={props.witchCall}\n                />\n              ))}\n            </CardDeck>\n          </Col>\n        )}\n      </Spring>\n      <Spring\n        from={{ opacity: 0, transform: \"translate3d(0,-40px,0)\" }}\n        to={{ opacity: 1, transform: \"translate3d(0,0,0)\" }}\n      >\n        {styles => (\n          <Col style={styles} xs=\"2\">\n            <CandiesList\n              keepMyBag={props.keepMyBag}\n              myCandies={props.myCandies}\n            />\n          </Col>\n        )}\n      </Spring>\n    </Row>\n  </div>\n);\n\nexport default AdressesListing;\n","import React, { Component, Fragment } from \"react\";\nimport { Container, Button } from \"reactstrap\";\n\nimport HomeButtons from \"./HomeButtons\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport getRandomNumber from \"./getRandomNumber\";\nimport FullInventory from \"./FullInventory\";\nimport AdressesListing from \"./AdressesListing\";\nimport witch from \"./img/witch.gif\";\nimport { Spring } from \"react-spring\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      adresses: [],\n      candiesList: [],\n      adressesAndCandies: [],\n      myCandies: [],\n      huntingOpen: false,\n      adresseOpen: false,\n      myCandiesOpen: false,\n      fullBag: [],\n      witchPower: 0,\n      witchCall: false,\n      playerName: \"\"\n    };\n    this.tabsOpeningSystem = this.tabsOpeningSystem.bind(this);\n    this.selectCandy = this.selectCandy.bind(this);\n    this.backButton = this.backButton.bind(this);\n    this.keepMyBag = this.keepMyBag.bind(this);\n    this.witchCall = this.witchCall.bind(this);\n    this.onPressEnterNicknameChecked = this.onPressEnterNicknameChecked.bind(\n      this\n    );\n  }\n\n  componentDidMount() {\n    this.callApiAdresses();\n    this.callApiCandies();\n  }\n\n  callApiAdresses() {\n    for (let i = 0; i < 20; i++) {\n      fetch(\n        `https://api-adresse.data.gouv.fr/search/?q=Reims&postcode=51100&limit=20`\n      )\n        .then(results => results.json()) // conversion du résultat en JSON\n        .then(data => {\n          data.features.map(\n            singleData => (\n              (singleData.candiesHouse = []),\n              (singleData.houseNumber = getRandomNumber(100))\n            )\n          );\n          this.setState({\n            adresses: { data }\n          });\n        });\n    }\n  }\n\n  callApiCandies() {\n    fetch(`https://fr-en.openfoodfacts.org/category/candies.json`)\n      .then(results => results.json()) // conversion du résultat en JSON\n      .then(data => {\n        this.setState({\n          candiesList: { data }\n        });\n      });\n  }\n\n  candiesAttribution() {\n    const listAdresses = this.state.adresses.data.features;\n    listAdresses.map(oneAdress => {\n      const listNumberRandom = [];\n      const candiesHouse = [];\n      for (let j = 5; j > 0; j--) {\n        const randomN = getRandomNumber(20);\n        if (!listNumberRandom.includes(randomN)) {\n          listNumberRandom.push(randomN);\n          let oneCandy = this.state.candiesList.data.products[randomN];\n          candiesHouse.push({ ...oneCandy });\n        } else j++;\n      }\n      oneAdress.candiesHouse = candiesHouse;\n    });\n    this.setState({\n      huntingOpen: true,\n      adressesAndCandies: listAdresses\n    });\n  }\n\n  tabsOpeningSystem(tabName) {\n    tabName === \"adresse\"\n      ? this.setState({\n          adresseOpen: true,\n          myCandiesOpen: false\n        })\n      : this.setState({\n          adresseOpen: false,\n          myCandiesOpen: true\n        });\n  }\n\n  selectCandy(id) {\n    let myCandies = this.state.myCandies;\n    let newCandy = this.state.candiesList.data.products.filter(product => {\n      if (product.id === id) {\n        return product;\n      }\n    });\n    this.setState({\n      myCandies: [...this.state.myCandies, newCandy],\n      witchPower: this.state.witchPower + 1\n    });\n  }\n\n  backButton() {\n    this.setState({\n      adresseOpen: false,\n      myCandiesOpen: false,\n      witchCall: false\n    });\n  }\n\n  keepMyBag() {\n    let newBag = this.state.myCandies;\n    this.setState({\n      adresseOpen: false,\n      myCandies: [],\n      witchPower: 0,\n      fullBag: [...this.state.fullBag, newBag]\n    });\n  }\n\n  witchCall() {\n    const randomN = getRandomNumber(8);\n    const witchPower = this.state.witchPower;\n    const result = randomN - witchPower;\n    if (result < 0) {\n      this.setState({\n        witchCall: true,\n        adresseOpen: false,\n        myCandies: [],\n        witchPower: 0\n      });\n    }\n  }\n\n  handleChangePlayerName(e) {\n    this.setState({\n      playerName: e.target.value\n    });\n  }\n\n  onPressEnterNicknameChecked(event) {\n    if (event.charCode === 13 && this.state.playerName.length > 2) {\n      this.setState({ huntingOpen: true });\n      this.candiesAttribution();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App font\">\n        <Header />\n        <Container fluid>\n          {!this.state.witchCall ? (\n            !this.state.huntingOpen ? (\n              <Fragment>\n                <Spring\n                  from={{ opacity: 0, transform: \"translate3d(0,-40px,0)\" }}\n                  to={{ opacity: 1, transform: \"translate3d(0,0,0)\" }}\n                >\n                  {props => (\n                    <div style={props} className=\"form-group\">\n                      <input\n                        type=\"text\"\n                        onChange={e => this.handleChangePlayerName(e)}\n                        onKeyPress={event =>\n                          this.onPressEnterNicknameChecked(event)\n                        }\n                        value={this.state.playerName}\n                        placeholder=\"Your nickname\"\n                      />\n                    </div>\n                  )}\n                </Spring>\n                <br />\n                {this.state.playerName.length > 2 && (\n                  <Spring\n                    from={{ opacity: 0, transform: \"translate3d(-40px,0,0)\" }}\n                    to={{ opacity: 1, transform: \"translate3d(0,0,0)\" }}\n                  >\n                    {props => (\n                      <Button\n                        style={props}\n                        className=\"chasseinit\"\n                        onClick={() => this.candiesAttribution()}\n                      >\n                        Let's Hunt\n                      </Button>\n                    )}\n                  </Spring>\n                )}\n              </Fragment>\n            ) : (\n              !this.state.adresseOpen &&\n              (!this.state.myCandiesOpen && (\n                <HomeButtons\n                  tabsOpeningFunction={this.tabsOpeningSystem}\n                  myCandies={this.state.myCandies}\n                />\n              ))\n            )\n          ) : (\n            <Fragment>\n              <h2>A Witch stole all your bag!</h2>\n              <img src={witch} alt=\"witch\" />\n              <br />\n              <Button\n                className=\"chasseinit mt-3\"\n                onClick={() => this.backButton()}\n              >\n                Retry\n              </Button>\n            </Fragment>\n          )}\n          {this.state.adresseOpen && (\n            <AdressesListing\n              witchCall={this.witchCall}\n              playerName={this.state.playerName}\n              backButton={this.backButton}\n              selectCandy={this.selectCandy}\n              adressesList={this.state.adressesAndCandies}\n              myCandies={this.state.myCandies}\n              keepMyBag={this.keepMyBag}\n            />\n          )}\n          {this.state.myCandiesOpen && (\n            <FullInventory\n              fullBag={this.state.fullBag}\n              backButton={this.backButton}\n            />\n          )}\n        </Container>\n        <footer className=\"footer w-100\">\n          <Footer />\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}